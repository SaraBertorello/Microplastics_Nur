################### ENVIRONMENT PREPARATION #########################

library("phyloseq")
library("ggplot2")
library("vegan")
library("readxl")
library("dplyr")
library("writexl")
library("DESeq2")
library("ggpubr")
library("devtools")
library("tidyr")
library("qiime2R")
library('writexl')

options(scipen=100)

dir.create("Results_Nanoplastiche")
dir.create("Results_Nanoplastiche/Alpha_Div")
dir.create("Results_Nanoplastiche/Beta_Div")
dir.create("Control")
dir.create("Results_Nanoplastiche/Deseq2")
dir.create("Results_Nanoplastiche/Abundances")
dir.create("Results_Nanoplastiche/PCoA")
dir.create("Results_Nanoplastiche/FFAs_correlations")
dir.create("Results_Nanoplastiche/TOP_5_Phyla")
dir.create("Results_Nanoplastiche/TOP_5_Genus")

##################### OBJECTS PREPARATION ##########################

setwd('../SARA/NANOPLASTICHE_NUR_23')

#Tax table
Table_tax<-read.table(file = 'taxonomy.csv', sep = ',', header= TRUE, row.names = 1)
Table_tax<-as.data.frame(Table_tax)
head(Table_tax)
Table_tax<-Table_tax[-2]
Table_tax<-separate(data=Table_tax,col=Taxon, sep=";", into=c("Domain","Phylum","Class", "Order","Family", "Genus", "Species"))
Table_tax$Domain<-gsub(pattern = "d__", replacement = "", x=Table_tax$Domain)
Table_tax$Phylum <-gsub(pattern = "p__", replacement = "", x=Table_tax$Phylum )
Table_tax$Class <-gsub(pattern = "c__", replacement = "", x=Table_tax$Class)
Table_tax$Order<-gsub(pattern = "o__", replacement = "", x=Table_tax$Order)
Table_tax$Family<-gsub(pattern = "f__", replacement = "", x=Table_tax$Family)
Table_tax$Genus<-gsub(pattern = "g__", replacement = "", x=Table_tax$Genus)
Table_tax$Species<-gsub(pattern = "s__", replacement = "", x=Table_tax$Species)
head(Table_tax)

#Sample table
Sample_table<- read.csv ("Sample.csv", sep=";", row.names = 1)
head(Sample_table)
vettore <- row.names(Sample_table)
Sample_table$Sample_ID<-vettore
Sample_table <- select(Sample_table, week, id, Sample_ID, FASTQ_ID, Condition, Sample)
head(Sample_table)
rm(vettore)

Sample_table$Condition<-gsub('Untreated','0',Sample_table$Condition)
Sample_table$Condition<-gsub('Treated','1',Sample_table$Condition)


#Otu table
otu_tab<- read_xlsx(path = 'otu_table_1.xlsx', sheet = 1)
head(otu_tab)
colnames(otu_tab)
colonna1<-otu_tab$ID_OTU
colonna1
otu_tab<-otu_tab[ , colnames(otu_tab) !="ID_OTU" ]
otu_tab<-apply(otu_tab,2,as.numeric)
rownames(otu_tab)<-colonna1
colnames(otu_tab)


data<- phyloseq(otu_table(as.matrix(otu_tab), taxa_are_rows = TRUE), tax_table(as.matrix(Table_tax)))
head(otu_table(data))
tax_table(data)



sample_names(data)
row.names(Sample_table)


row.names(Sample_table)<-gsub(" ","",row.names(Sample_table))
Sample_table<-Sample_table[sample_names(data), ]
length(Sample_table$Sample_ID[! is.na(Sample_table$Sample_ID)]) #60
identical(row.names(Sample_table), sample_names(data)) # TRUE

sample_data(data)<-Sample_table

#check
head(otu_table(data))
head(tax_table(data))
head(sample_names(data))


rm(colonna1)

##### preliminary PCoA #####
data.prop_first <- transform_sample_counts(data, function(x) x/sum(x)*100)
#### on ASV
data.sqrt_prop<-transform_sample_counts(data.prop_first, sqrt)
DistEU <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordEU <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistEU)

eigval<-ordEU$values$Eigenvalues   
eigval<- round((eigval/sum(eigval))*100,1) #to extract value of 2 PC axes

# to add the sample number
sample_data(data)
Sample_number<-paste0(sample_data(data)$Sample_ID,sample_data(data)$Sample)
Sample_number
Sample_number<-unlist(strsplit(Sample_number, split = "-"))

Sample_number<-gsub("Stool","-Stool",Sample_number)
Sample_number<-gsub("Colon","-Colon",Sample_number)
Sample_number<-gsub("Saliva","-Saliva",Sample_number)
Sample_number<-gsub("Lung","-Lung",Sample_number)
Sample_number

plot_ordination(data.sqrt_prop, ordEU, color = "Sample") +
  geom_point(size=2.5) + 
  geom_text(aes(label = Sample_number), color="black",show.legend=F, size=2) +
  theme_classic() +
  stat_ellipse() + 
  labs(title="PCoA with Euclidean distance pre filter on ASV percent abundance", 
       color="Sample", x=paste("PC1: ",eigval[1],"% variation"), y=paste("PC2: ",eigval[2],"% variation"))

ggsave(file="Results_Nanoplastiche/PCoA/PCoA_Euclidean_ASV_pre_filter.png", width = 7, height = 5, dpi=300)


############### FILTERING AND CLEANING ##############

# control Domain
data.temp <- tax_glom(data, taxrank = "Domain", NArm = F)
cbind(otu_table(data.temp),tax_table(data.temp)[,1])
write.csv2(cbind(tax_table(data.temp)[,1], otu_table(data.temp)), file="Control/Domains_proportions.csv", quote=F, row.names = F)

tax_table(data.temp)
otu_table(data.temp)

data<-subset_taxa(data, Domain=="Bacteria" | Domain== "Archaea")
length(which(tax_table(data)=="Bacteria"))
length(which(tax_table(data)=="Archaea"))
head(otu_table(data))


save(data, file = "data_Nanoplastiche.RData") # after domain filter


data.temp1 <- tax_glom(data, taxrank = "Genus", NArm = F)
data.temp1 <- transform_sample_counts(data.temp1, function(x) (x/sum(x)) *100) # relative abundance
head(otu_table(data.temp1))

original_taxa_number<-length(taxa_names(data.temp1))
original_taxa_number #601

data.bad<-filter_taxa(data.temp1, function(x) mean(x)<=0.005, TRUE )  # manteining only those with rel abundance lower than 0.005
unique(as.character(tax_table(data.bad)[,"Genus"]))
otu_table(data.bad)
write.csv2(cbind(tax_table(data.bad), otu_table(data.bad)), file="Control/Contaminant_genera_under_0005_average.csv", quote=F, row.names = F)

data.filter<-filter_taxa(data.temp1, function(x) mean(x)>=0.005, TRUE )
head(otu_table(data.filter))
head(tax_table(data.filter))

if(! "filter_marker" %in% ls() ){
  data.original<-data
  data<-subset_taxa(data, Genus %in% as.character(tax_table(data.filter)[ ,"Genus"])) 
  filter_marker<- "Filtering done"
  rm(data.temp, data.temp1)
} else { 
  cat("\n The dataset is already filtered \n\n")
}


############################## RARECURVE ##############################################

evalslopes<-function(x,names,lim=0.5,t=10,cex=0.5) {
  #x: the rarefaction curve as generated by rarecurve (with label=F)
  #lim: the threshold of the slope value to accept saturation
  #b: how long the rarefaction tail should be evaluated (e.g. the last 10 points)
  #names: the labels (the same used of the original samples (and in the same order!!!)
  sat<-0
  for (i in 1:length(x)) {
    v<-as.vector(x[[i]])
    dx<-as.numeric(gsub("N","",names(x[[1]])[2]))-1
    check<-"red"
    if(length(x) < 10) {
      points(as.numeric(rev(gsub("N","",names(x[[i]])))[1]),v[1],col="cyan",pch=16,cex=1)
    } else {
      #the slope is estimated (average) at the last b rarefaction points
      slope<-mean(diff(v[(length(v)-t):length(v)])/dx)
      if(slope<lim) {
        check<-"blue"
        sat = sat+1
      }
      cat(i,slope,check,"\n")
      # text(as.numeric(rev(gsub("N","",names(x[[i]])))[1]),v[1],labels=slope,col=check,cex=0.5)
      # points(as.numeric(rev(gsub("N","",names(x[[i]])))[1]),v[1],col=check,pch=16,cex=1)
      text(as.numeric(rev(gsub("N","",names(x[[i]])))[1]),rev(v)[1],col=check,pch=16,cex=cex,labels=names[i])
    }
  }
  legend("bottomright",paste(sat,"saturated samples"),bty="n")
}

png(file="Control/Rarefaction_curve.png",width=3000,height=2100, res=300)
r<-rarecurve(t(as(otu_table(data),"matrix")), step=100,label=F)
evalslopes(r,sample_names(data),lim=0.001,cex=1)
dev.off() # all samples saturated


########################## ABUNDANCES #################################

{
  data.phy <- tax_glom(data, taxrank = "Phylum", NArm = F)
  data.genus <- tax_glom(data, taxrank = "Genus", NArm = F)
  
  data.prop <- transform_sample_counts(data, function(x) x/sum(x)*100)
  data.phy.prop <- transform_sample_counts(data.phy, function(x) x/sum(x)*100)
  data.genus.prop <- transform_sample_counts(data.genus, function(x) x/sum(x)*100)
  
}

head( as.data.frame(tax_table(data.genus)) ) 

head( cbind(as(otu_table(data.phy.prop),"matrix"), as(tax_table(data.phy),"matrix")) )

write.csv2( cbind(as(otu_table(data),"matrix"), as(tax_table(data),"matrix")), file="Results_Nanoplastiche/Abundances/ASV_abundances.csv", quote=F)
write.csv2( cbind(as(otu_table(data.phy.prop),"matrix"), as(tax_table(data.phy),"matrix")), file="Results_Nanoplastiche/Abundances/Phyla_abundances.csv", quote=F)
write.csv2( cbind(as(otu_table(data.genus.prop),"matrix"), as(tax_table(data.genus),"matrix")), file="Results_Nanoplastiche/Abundances/Genera_abundances.csv", quote=F)


######################  TOP 5 PHYLA e GENUS  ################################################################
###################### PHYLA #############################

## Saliva
sample_data (data.phy.prop)
oral.phyla.prop<-subset_samples(data.phy.prop, Sample == "Saliva")
sample_data(oral.phyla.prop)

## control
prop.oral.control<-subset_samples(oral.phyla.prop, Condition == "0")

top5_phyla <- names(sort(taxa_sums(prop.oral.control), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.oral.control)
otu_table(prune.dat_top5_phyla)

tax_table(prop.oral.control)
others_phyla<-taxa_names(prop.oral.control)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.oral.control)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)


ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Saliva Control")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Control_Saliva.png", width = 9, height = 5, dpi = 300)

#per avere percentuali medie
write.csv(file = "Results_Nanoplastiche/TOP5_phyla_saliva_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)

## case
prop.oral.case<-subset_samples(oral.phyla.prop, Condition == "1")

top5_phyla <- names(sort(taxa_sums(prop.oral.case), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.oral.case)

tax_table(prop.oral.case)
others_phyla<-taxa_names(prop.oral.case)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.oral.case)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Saliva Case")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Case_Saliva.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_saliva_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)

## STOOL
head(sample_data(data))
week1<- 83:94
week4<- c(96:103,105,106,95,104)
week1<- paste(" DM", week1, sep = "")
week1
week4<- paste(" DM", week4, sep = "")
week4

sample_data (data.phy.prop)
stool.phyla.prop<-subset_samples(data.phy.prop, Sample == "Stool")
sample_data(stool.phyla.prop)

##Control w1
prop.stool.control<-subset_samples(stool.phyla.prop, Condition == "0" & week == 'w1' )
sample_data(prop.stool.control)

top5_phyla <- names(sort(taxa_sums(prop.stool.control), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.stool.control)

tax_table(prop.stool.control)
others_phyla<-taxa_names(prop.stool.control)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.stool.control)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Control Stool W1")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Control_Stool_w1.png", width = 9, height = 5, dpi = 300)

rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)

##Control w4
prop.stool.control<-subset_samples(stool.phyla.prop, Condition == "0" & week == 'w4' )
sample_data(prop.stool.control)

top5_phyla <- names(sort(taxa_sums(prop.stool.control), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.stool.control)

tax_table(prop.stool.control)
others_phyla<-taxa_names(prop.stool.control)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.stool.control)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Control Stool W4")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Control_Stool_w4.png", width = 9, height = 5, dpi = 300)

rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)

##Case
stool_top_w1<- subset_samples(stool.phyla.prop, Sample_ID == week1)
stool_top_w4<- subset_samples(stool.phyla.prop, Sample_ID == week4)
sample_data(stool_top_w1)
sample_data(stool_top_w4)

#w1
prop.stool.case<-subset_samples(stool_top_w1, Condition == "1") 

top5_phyla <- names(sort(taxa_sums(prop.stool.case), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.stool.case)

tax_table(prop.stool.case)
others_phyla<-taxa_names(prop.stool.case)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.stool.case)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) +
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) +
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#28E2E5","grey"  ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Stool Case W1")

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_stool1_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Case_Stool_w1.png", width = 9, height = 5, dpi = 300)

#w4
prop.stool.case<-subset_samples(stool_top_w4, Condition == "1") 

top5_phyla <- names(sort(taxa_sums(prop.stool.case), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.stool.case)

tax_table(prop.stool.case)
others_phyla<-taxa_names(prop.stool.case)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.stool.case)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"grey", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Stool Case W4")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Case_Stool_w4.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_stool4_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))


## LUNG
sample_data (data.phy.prop)
lung.phyla.prop<-subset_samples(data.phy.prop, Sample == "Lung")
sample_data(lung.phyla.prop)

##Control
prop.lung.control<-subset_samples(lung.phyla.prop, Condition == "Control")
sample_data(prop.lung.control)

top5_phyla <- names(sort(taxa_sums(prop.lung.control), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.lung.control)

tax_table(prop.lung.control)
others_phyla<-taxa_names(prop.lung.control)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.lung.control)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

plot1<-ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Untreated Lung")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Control_lung.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_lung_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))


rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)

##Case
prop.lung.case<-subset_samples(lung.phyla.prop, Condition == "Case")

top5_phyla <- names(sort(taxa_sums(prop.lung.case), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.lung.case)

tax_table(prop.lung.case)
others_phyla<-taxa_names(prop.lung.case)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.lung.case)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

plot2<-ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Treated Lung")


ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Caso_lung.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_lung_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

rm(top5_phyla, prune.dat_top5_phyla,others_phyla,prune.others_phyla,tabella_top_phyla,tabella_others_phyla,tabella_phyla)



## COLON
sample_data (data.phy.prop)
colon.phyla.prop<-subset_samples(data.phy.prop, Sample == "Colon")
sample_data(colon.phyla.prop)

##Control
prop.colon.control<-subset_samples(colon.phyla.prop, Condition == "0")

top5_phyla <- names(sort(taxa_sums(prop.colon.control), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.colon.control)

tax_table(prop.colon.control)
others_phyla<-taxa_names(prop.colon.control)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.colon.control)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Control Colon")

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_colon_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Control_colon.png", width = 9, height = 5, dpi = 300)

##Case
prop.colon.case<-subset_samples(colon.phyla.prop, Condition == "1")

top5_phyla <- names(sort(taxa_sums(prop.colon.case), decreasing=TRUE))[1:5] 
prune.dat_top5_phyla <- prune_taxa(top5_phyla, prop.colon.case)

tax_table(prop.colon.case)
others_phyla<-taxa_names(prop.colon.case)
others_phyla
others_phyla<-others_phyla[!(others_phyla %in% top5_phyla)]
prune.others_phyla<- prune_taxa(others_phyla, prop.colon.case)

tabella_top_phyla<-psmelt(prune.dat_top5_phyla)
tabella_others_phyla<-psmelt(prune.others_phyla)
tabella_others_phyla$Phylum<-"Others"
tabella_phyla<-rbind.data.frame(tabella_top_phyla,tabella_others_phyla)
#View(tabella_phyla)
palette("default") 
palette()

ggplot(data=tabella_phyla, aes(x=Sample, y=Abundance, fill=Phylum)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#61D04F","#2297E6","#28E2E5","#CD0BBC","gray" , "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant Phyla Case Colon")

write.csv(file = "Results_Nanoplastiche/TOP5_phyla_colon_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_phyla),1,mean)), "phylum"= as.data.frame(tax_table(prune.dat_top5_phyla))[["Phylum"]]))

ggsave(filename = "Results_Nanoplastiche//TOP_5_Phyla/Bar_plot_5_top_phyla_Caso_colon.png", width = 9, height = 5, dpi = 300)


#################### GENUS ######################
## Saliva
sample_data (data.genus.prop)
oral.genus.prop<-subset_samples(data.genus.prop, Sample == "Saliva")
sample_data(oral.genus.prop)

## control
prop.oral.control<-subset_samples(oral.genus.prop, Condition == "0")

top5_genus <- names(sort(taxa_sums(prop.oral.control), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus, prop.oral.control)

tax_table(prop.oral.control)
others_genus<-taxa_names(prop.oral.control)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus)]
prune.others_genus<- prune_taxa(others_genus, prop.oral.control)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)

tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #6

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Order), tabella_genus$Genus) #bc also family was NA

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Saliva Control")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Control_Saliva.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_saliva_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

## case
prop.oral.case<-subset_samples(oral.genus.prop, Condition == "1")
sample_data(prop.oral.case)

top5_genus <- names(sort(taxa_sums(prop.oral.case), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus, prop.oral.case)

tax_table(prop.oral.case)
others_genus<-taxa_names(prop.oral.case)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus)]
prune.others_genus<- prune_taxa(others_genus, prop.oral.case)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #6

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Order), tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("gray", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Saliva Case")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Case_Saliva.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_saliva_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

## STOOL
sample_data (data.genus.prop)
stool.genus.prop<-subset_samples(data.genus.prop, Sample == "Stool")
sample_data(stool.genus.prop)

##Control w1
prop.stool.control<-subset_samples(stool.genus.prop, Condition == "0" & week == 'w1')
sample_data(prop.stool.control)

top5_genus_control_stool_w1 <- names(sort(taxa_sums(prop.stool.control), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_control_stool_w1, prop.stool.control)

tax_table(prop.stool.control)
others_genus<-taxa_names(prop.stool.control)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_control_stool_w1)]
prune.others_genus<- prune_taxa(others_genus, prop.stool.control)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Control Stool W1")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Control_Stool_w1.png", width = 9, height = 5, dpi = 300)

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

##Control w4
prop.stool.control<-subset_samples(stool.genus.prop, Condition == "0" & week == 'w4')
sample_data(prop.stool.control)

top5_genus_control_stool_w4 <- names(sort(taxa_sums(prop.stool.control), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_control_stool_w4, prop.stool.control)

tax_table(prop.stool.control)
others_genus<-taxa_names(prop.stool.control)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_control_stool_w4)]
prune.others_genus<- prune_taxa(others_genus, prop.stool.control)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus_w4_case<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus_w4_case)
length(which(is.na(tabella_genus_w4_case$Genus))) #6

tabella_genus_w4_case$Genus<- ifelse(is.na(tabella_genus_w4_case$Genus),  paste('NA_', tabella_genus_w4_case$Family), tabella_genus_w4_case$Genus)

ggplot(data=tabella_genus_w4_case, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Control Stool W4")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Control_Stool_w4.png", width = 9, height = 5, dpi = 300)

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)


##Case
stool_top_w1<- subset_samples(stool.genus.prop, Sample_ID == week1)
stool_top_w4<- subset_samples(stool.genus.prop, Sample_ID == week4)
sample_data(stool_top_w1)
sample_data(stool_top_w4)

#w1
prop.stool.case<-subset_samples(stool.genus.prop, Condition == "1" & week == 'w1')
sample_data(prop.stool.case)

top5_genus_w1_stool <- names(sort(taxa_sums(prop.stool.case), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_w1_stool, prop.stool.case)
tax_table(prune.dat_top5_genus)

tax_table(prop.stool.case)
others_genus<-taxa_names(prop.stool.case)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_w1_stool)]
prune.others_genus<- prune_taxa(others_genus, prop.stool.case)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)

View(tabella_genus)
length(which(is.na(tabella_genus$Genus)))

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"gray", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Case Stool W1")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Case_Stool_w1.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_stool1_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

#w4
prop.stool.case<-subset_samples(stool.genus.prop, Condition == "1" & week == 'w4')
sample_data(prop.stool.case)

top5_genus_w4_stool <- names(sort(taxa_sums(prop.stool.case), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_w4_stool, prop.stool.case)

tax_table(prop.stool.case)
others_genus<-taxa_names(prop.stool.case)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_w4_stool)]
prune.others_genus<- prune_taxa(others_genus, prop.stool.case)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("gray" ,"#DF536B","#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Case Stool W4")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Case_Stool_w4.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_stool4_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)


### obj ffas analysis
tot_top_genus_stool<- c(top5_genus_w4_stool, top5_genus_w1_stool, top5_genus_control_stool_w4, top5_genus_control_stool_w1)

## LUNG
sample_data (data.genus.prop)
lung.genus.prop<-subset_samples(data.genus.prop, Sample == "Lung")
sample_data(lung.genus.prop)

##Control
prop.lung.control<-subset_samples(lung.genus.prop, Condition == "0")
sample_data(prop.lung.control)

top5_genus <- names(sort(taxa_sums(prop.lung.control), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus, prop.lung.control)

tax_table(prop.lung.control)
others_genus<-taxa_names(prop.lung.control)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus)]
prune.others_genus<- prune_taxa(others_genus, prop.lung.control)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)


ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Control Lung")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Control_lung.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_lung_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

##Case
prop.lung.case<-subset_samples(lung.genus.prop, Condition == "1")

top5_genus <- names(sort(taxa_sums(prop.lung.case), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus, prop.lung.case)

tax_table(prop.lung.case)
others_genus<-taxa_names(prop.lung.case)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus)]
prune.others_genus<- prune_taxa(others_genus, prop.lung.case)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("gray" ,"#DF536B","#61D04F","pink","#28E2E5","#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Case Lung")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Case_lung.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_lung_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))


rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

## COLON
sample_data (data.genus.prop)
colon.genus.prop<-subset_samples(data.genus.prop, Sample == "Colon")
sample_data(colon.genus.prop)

##Control
prop.colon.control<-subset_samples(colon.genus.prop, Condition == "0")

top5_genus_colon_control <- names(sort(taxa_sums(prop.colon.control), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_colon_control, prop.colon.control)

tax_table(prop.colon.control)
others_genus<-taxa_names(prop.colon.control)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_colon_control)]
prune.others_genus<- prune_taxa(others_genus, prop.colon.control)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) +
  scale_fill_manual(values=c("#DF536B", "#61D04F" ,"#2297E6" ,"#28E2E5" ,"#CD0BBC", "#F5C710")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Control Colon")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Control_colon.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_colon_control.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

##Case
sample_data(colon.genus.prop)$Condition<-gsub('Control','Untreated',sample_data(colon.genus.prop)$Condition)
sample_data(colon.genus.prop)$Condition<-gsub('Case','Treated',sample_data(colon.genus.prop)$Condition)
sample_data(colon.genus.prop)
prop.colon.case<-subset_samples(colon.genus.prop, Condition == "Case")

top5_genus_colon_case <- names(sort(taxa_sums(prop.colon.case), decreasing=TRUE))[1:5] 
prune.dat_top5_genus <- prune_taxa(top5_genus_colon_case, prop.colon.case)

tax_table(prop.colon.case)
others_genus<-taxa_names(prop.colon.case)
others_genus
others_genus<-others_genus[!(others_genus %in% top5_genus_colon_case)]
prune.others_genus<- prune_taxa(others_genus, prop.colon.case)

tabella_top_genus<-psmelt(prune.dat_top5_genus)
tabella_others_genus<-psmelt(prune.others_genus)
tabella_others_genus$Genus<-"Others"
tabella_genus<-rbind.data.frame(tabella_top_genus,tabella_others_genus)
#View(tabella_genus)
length(which(is.na(tabella_genus$Genus))) #12

tabella_genus$Genus<- ifelse(is.na(tabella_genus$Genus),  paste('NA_', tabella_genus$Family), tabella_genus$Genus)
tabella_genus$Genus[tabella_genus$Genus == "uncultured"] <- paste0("Uncultured_", tabella_genus$Family[tabella_genus$Genus == "uncultured"])
tabella_genus$Genus[tabella_genus$Genus == " uncultured"] <- paste0("Uncultured_", tabella_genus$Family[tabella_genus$Genus == " uncultured"])
tabella_genus$Genus <- gsub(" ", "", tabella_genus$Genus)

ggplot(data=tabella_genus, aes(x=Sample, y=Abundance, fill=Genus)) + 
  geom_bar(stat="identity", position="stack") + theme_classic(base_size=14) + 
  scale_fill_manual(values=c("#61D04F", '#2297E6',"#CD0BBC","pink", "#F5C710", "gray")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5), 
        legend.key.size = unit(0.4, "cm"),legend.text = element_text ( size = 12 )) + 
  theme(legend.position="bottom") + guides(fill=guide_legend(nrow=2)) +
  labs(x="Subject", y="Relative abundance", title = "Five most abundant genus Treated Colon")


ggsave(filename = "Results_Nanoplastiche/TOP_5_Genus/Bar_plot_5_top_genus_Case_colon.png", width = 9, height = 5, dpi = 300)

write.csv(file = "Results_Nanoplastiche/TOP5_genus_colon_case.csv", row.names = F,
          cbind.data.frame("mean"=as.numeric(apply(otu_table(prune.dat_top5_genus),1,mean)), "genus"= as.data.frame(tax_table(prune.dat_top5_genus))[["Genus"]]))

rm(top5_genus, prune.dat_top5_genus,others_genus,prune.others_genus,tabella_top_genus,tabella_others_genus,tabella_genus)

########################### PCoA all samples ########################

#### on ASV

data.sqrt<-transform_sample_counts(data.prop, sqrt) # sqrt of proportion
DistBC = phyloseq::distance(data.sqrt, method = "euclidean")
ordBC = ordinate(data.sqrt, method = "PCoA", distance = DistBC)
eigval<-ordBC$values$Eigenvalues   
eigval<- round((eigval/sum(eigval))*100,1) #to extract value of 2 PC axes

# to add the sample number
sample_data(data)
Sample_number<-paste0(sample_data(data)$Sample_ID,sample_data(data)$Sample)
Sample_number
Sample_number<-unlist(strsplit(Sample_number, split = "-"))

Sample_number<-gsub("Stool","-Stool",Sample_number)
Sample_number<-gsub("Colon","-Colon",Sample_number)
Sample_number<-gsub("Saliva","-Saliva",Sample_number)
Sample_number<-gsub("Lung","-Lung",Sample_number)
Sample_number

plot_ordination(data.sqrt, ordBC, color = "Sample") +
  geom_point(size=2.5) + 
  geom_text(aes(label = Sample_number), color="black",show.legend=F, size=2) +
  theme_classic() +
  stat_ellipse() + 
  labs(title="PCoA with Euclidean distance after filter on ASV percent abundance", 
       color="Sample", x=paste("PC1: ",eigval[1],"% variation"), y=paste("PC2: ",eigval[2],"% variation"))

ggsave(file="Results_Nanoplastiche/PCoA/PCoA_Euclidean_ASV_after_filter.png", width = 7, height = 5, dpi=300)

######################  ALPHA DIVERSITY ###################################
#STOOL
#richness observed e shannon 
a_stool<-subset_samples(data, Sample == 'Stool') 
sample_data(a_stool)

sample_data(data)
a_stool_W1<-subset_samples(a_stool, Sample_ID==week1)
sample_data(a_stool_W1)
length(row.names(sample_data(a_stool_W1))) #12

a_stool_W4<-subset_samples(a_stool, Sample_ID==week4)
sample_data(a_stool_W4)
length(row.names(sample_data(a_stool_W4))) #12

a_stool_w1w4 <- subset_samples(a_stool, Condition==1)


#W1 vs control
pAlpha<-plot_richness(a_stool_W1, measures=c("Shannon", "Observed"), x="Condition")
pAlpha

class(colnames(sample_data(a_stool_W1)))

#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="Condition", title=paste ("Alpha diversity plot Stool W1")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = Condition), method = "wilcox.test", paired=FALSE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Stool W1.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

#W4 vs control
pAlpha<-plot_richness(a_stool_W4, measures=c("Shannon", "Observed"), x="Condition")
pAlpha

class(colnames(sample_data(a_stool_W4)))

#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="Condition", title=paste ("Alpha diversity plot Stool W4")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = Condition), method = "wilcox.test", paired=FALSE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Stool W4.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

#w1 vs w4
sample_data(a_stool_w1w4)

# order w1 w4 in order to do a paired test bc is the same mice
nuovi_nomi_campioni <- c("DM89", "DM90", "DM91", "DM92", "DM93", "DM94", "DM101", "DM102", "DM103", "DM104", "DM105", "DM106")

a_stool_w1w4

#sample_table
metadata_case <- as.data.frame(sample_data(a_stool_w1w4))
head(metadata_case)

metadata_case <- metadata_case [nuovi_nomi_campioni,]
metadata_case #ordinati

#otu_table
otu_case <- as.data.frame(otu_table(a_stool_w1w4))
otu_case

otu_case <- otu_case [, nuovi_nomi_campioni]
head(otu_case)

#tax_table
tax_case <- as.data.frame(tax_table(a_stool_w1w4))

#nuovo phy obj
new_alpha<- phyloseq(otu_table(as.matrix(otu_case), taxa_are_rows = TRUE), tax_table(as.matrix(tax_case)), sample_data(metadata_case))
sample_data(new_alpha)


pAlpha<-plot_richness(new_alpha, measures=c("Shannon", "Observed"), x="week")
pAlpha

class(colnames(sample_data(new_alpha)))

#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="week", title=paste ("Alpha diversity plot Stool W1 vs W4")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = week), method = "wilcox.test", paired=TRUE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Stool W1 W4.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

#COLON
#richness observed e shannon 
sample_data(data)
a_colon<-subset_samples(data, Sample == 'Colon')
sample_data(a_colon)

pAlpha<-plot_richness(a_colon, measures=c("Shannon", "Observed"), x="Condition")
pAlpha

class(colnames(sample_data(a_colon)))


#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="Condition", title=paste ("Alpha diversity plot Colon")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = Condition), method = "wilcox.test", paired=FALSE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Colon.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

#Saliva
#richness observed e shannon 
sample_data(data)
a_oral<-subset_samples(data, Sample == 'Saliva')
sample_data(a_oral)

pAlpha<-plot_richness(a_oral, measures=c("Shannon", "Observed"), x="Condition")
pAlpha

class(colnames(sample_data(a_oral)))


#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="Condition", title=paste ("Alpha diversity plot Saliva")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = Condition), method = "wilcox.test", paired=FALSE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Saliva.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

#LUNG
#richness observed e shannon 
sample_data(data)
a_lung<-subset_samples(data, Sample == 'Lung')
sample_data(a_lung)

pAlpha<-plot_richness(a_lung, measures=c("Shannon", "Observed"), x="Condition")
pAlpha

class(colnames(sample_data(a_lung)))


#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="Condition", title=paste ("Alpha diversity plot Lung")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = Condition), method = "wilcox.test", paired=FALSE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Lung.png"), width = 6,height =6, dpi=300)  #Mann Withney test


########### BETA DIVERSITY & PERMANOVA ###############
#STOOL
b.stool<-subset_samples(data.genus.prop , Sample=='Stool')
b.stool.w1<-subset_samples(b.stool, Sample_ID == week1)
b.stool.w4<-subset_samples(b.stool, Sample_ID == week4)
b.stool.w1_w4 <- subset_samples(b.stool, Condition == 1)
sample_data(b.stool.w4)
sample_data(b.stool.w1)
sample_data(b.stool.w1_w4)

#w1 vs control
data.sqrt_prop<-transform_sample_counts(b.stool.w1, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)

PERM<-adonis2(DistBC ~ sample_data(b.stool.w1)[['Condition']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['Condition']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'Condition', shape = 'Condition') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Stool W1"), 
       subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'Condition')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Stool W1.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)


#w4 vs control
data.sqrt_prop<-transform_sample_counts(b.stool.w4, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)


PERM<-adonis2(DistBC ~ sample_data(b.stool.w4)[['Condition']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['Condition']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'Condition', shape = 'Condition') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Stool W4"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'Condition')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Stool W4.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)

#w1 vs w4
data.sqrt_prop<-transform_sample_counts(b.stool.w1_w4, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)

PERM<-adonis2(DistBC ~ sample_data(b.stool.w1_w4)[['week']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['week']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'week', shape = 'week') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Stool W1 vs W4"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'week')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Stool W1 vs W4.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)

###LUNG
b.lung<-subset_samples(data.genus.prop , Sample=='Lung')
sample_data(b.lung)

data.sqrt_prop<-transform_sample_counts(b.lung, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate (data.sqrt_prop, method = "PCoA", distance = DistBC)

PERM<-adonis2(DistBC ~ sample_data(b.lung)[['Condition']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['Condition']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'Condition', shape = 'Condition') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Lung"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'Condition')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Lung.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)


###COLON
b.colon<-subset_samples(data.genus.prop , Sample=='Colon')

data.sqrt_prop<-transform_sample_counts(b.colon, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)

PERM<-adonis2(DistBC ~ sample_data(b.colon)[['Condition']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['Condition']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'Condition', shape = 'Condition') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Colon"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'Condition')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Colon.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)

###Saliva
b.oral<-subset_samples(data.genus.prop , Sample=='Saliva')

data.sqrt_prop<-transform_sample_counts(b.oral, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)

PERM<-adonis2(DistBC ~ sample_data(b.oral)[['Condition']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['Condition']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])


plot_ordination(data.sqrt_prop, ordBC, color = 'Condition', shape = 'Condition') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Saliva"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'Condition')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Saliva.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)


################## DESEQ2 #############################

### preparation of data sample table

sample_data(data)$Condition<-gsub(pattern="Control",replacement="Untreated", x=sample_data(data)$Condition) 
sample_data(data)$Condition<-gsub(pattern="Case",replacement="Treated", x=sample_data(data)$Condition) 
sample_data(data)

#stool
stool_desq<-subset_samples(data, Sample=='Stool')
sample_data(stool_desq)
stool_desq_w1<- subset_samples(stool_desq, week == 'w1')
stool_desq_w4<- subset_samples(stool_desq, week == 'w4')
sample_data(stool_desq_w1)

#w1 vs control

results_STOOL_w1<-NULL

for (i in colnames(tax_table(stool_desq_w1))[-7]) {
  #data_temp<-prune_taxa(taxa_sums(stool_desq_w1)>10, stool_desq_w1) # noise filter
  data_temp <- tax_glom (stool_desq_w1, taxrank=i, NArm=F)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ Condition)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("Condition", 'Untreated', 'Treated'))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_STOOL_w1<-rbind.data.frame(results_STOOL_w1,res)
  }
} 

results_STOOL_w1  #Family

#w4 vs control

results_STOOL_w4<-NULL

for (i in colnames(tax_table(stool_desq_w4))[-7]) {
  data_temp<-prune_taxa(taxa_sums(stool_desq_w4)>10, stool_desq_w4) # noise filter
  data_temp <- tax_glom (stool_desq_w4, taxrank=i, NArm=F)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ Condition)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("Condition", "Untreated", "Treated"))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_STOOL_w4<-rbind.data.frame(results_STOOL_w4,res)
  }
} 

results_STOOL_w4 # NULL

# w1 vs w4 case
sample_data(data)
w1_w4 <- subset_samples(data, Sample == 'Stool' & Condition == 'Treated')
column<-rep ('w1',6)
column2<-rep('w4',6)
colonnaW<-c(column,column2)
sample_data(w1_w4)$week<-colonnaW
sample_data(w1_w4)

results_STOOL_w1_w4<-NULL

for (i in colnames(tax_table(w1_w4))[-7]) {
  data_temp <- tax_glom (w1_w4, taxrank=i, NArm=F)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ week)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("week", "w1", "w4"))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_STOOL_w1_w4<-rbind.data.frame(results_STOOL_w1_w4,res)
  }
} 

results_STOOL_w1_w4 # a lot
write.csv(x = results_STOOL_w1_w4,file = 'stool_deseq.csv')

#w1 vs w4 control

sample_data(data)
w1_w4_cnt <- subset_samples(data, Sample == 'Stool' & Condition == 'Untreated')
sample_data(w1_w4_cnt)
column<-rep ('w1',6)
column2<-rep('w4',6)
colonnaW<-c(column,column2)
sample_data(w1_w4_cnt)$week<-colonnaW
sample_data(w1_w4_cnt)

results_STOOL_w1_w4_cnt<-NULL

for (i in colnames(tax_table(w1_w4_cnt))[-7]) {
  data_temp <- tax_glom (w1_w4_cnt, taxrank=i, NArm=F)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ week)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("week", "w1", "w4"))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_STOOL_w1_w4_cnt<-rbind.data.frame(results_STOOL_w1_w4_cnt,res)
  }
} 

results_STOOL_w1_w4_cnt # NULL

#Saliva
oral_desq<-subset_samples(data, Sample=='Saliva')

results_oral<-NULL

for (i in colnames(tax_table(oral_desq))[-7]) {
  #data_temp<-prune_taxa(taxa_sums(oral_desq)>10, oral_desq) # noise filter
  data_temp <- tax_glom (oral_desq, taxrank=i)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ Condition)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("Condition", "Untreated", "Treated"))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_oral<-rbind.data.frame(results_oral,res)
  }
} 

results_oral #NULL

#colon
colon_desq<-subset_samples(data, Sample=='Colon')
sample_data(colon_desq)

results_colon<-NULL

for (i in colnames(tax_table(colon_desq))[-7]) {
  #data_temp<-prune_taxa(taxa_sums(colon_desq)>10, colon_desq) # noise filter
  data_temp <- tax_glom (colon_desq, taxrank=i)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ Condition)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("Condition", 'Untreated', 'Treated'))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_colon<-rbind.data.frame(results_colon,res)
  }
} 

results_colon #a lot
results_colon<-subset.data.frame(results_colon, baseMean>100)
results_colon

#lung
lung_desq<-subset_samples(data, Sample=='Lung')

results_lung<-NULL

for (i in colnames(tax_table(lung_desq))[-7]) {
  data_temp<-prune_taxa(taxa_sums(lung_desq)>10, lung_desq) # noise filter
  data_temp <- tax_glom (lung_desq, taxrank=i)
  diagdds <- phyloseq_to_deseq2(physeq = data_temp, ~ Condition)   
  diagdds <- DESeq(diagdds)
  res <- results(diagdds, contrast=c("Condition", "Untreated", "Treated"))   
  res <- res[order(res$padj, na.last=NA), ] 
  res <- res[(res$padj < 0.05) & abs(res$log2FoldChange)>1,]
  res <- as.data.frame(res)
  if (length (row.names(res)) >=1  ) {
    res<- cbind(i, res, ASV=row.names(res))
    results_lung<-rbind.data.frame(results_lung,res)
  }
} 

results_lung # a lot
results_lung<-subset.data.frame(results_lung, baseMean>100)
results_lung

################### BOXPLOT DESEQ2 ###################
#####STOOL BOXPLOT #########

# Phylum
results_STOOL_w1_w4
Dati_box_stool<-results_STOOL_w1_w4

Dati_stool_p<-Dati_box_stool[Dati_box_stool$i=="Phylum","ASV"] #1 Phylum

Dati_stool_p 

data.phy.stool <- tax_glom(w1_w4, taxrank = "Phylum", NArm = F)
data.prop.stool <- transform_sample_counts(data.phy.stool, function(x) x/sum(x)*100)


Dati_stool_p<-prune_taxa(Dati_stool_p, data.prop.stool)
Dati_stool_p

Dati_stool_p<-psmelt(Dati_stool_p)
Dati_stool_p

ggplot(Dati_stool_p,aes(x= Phylum, y=Abundance, fill= week)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Phylum Stool W1 vs W4", y="Relative Abundance", 
       fill='week', x="Phylum")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Phylum_Stool_W1_vs_W4.png", width = 15, height = 8, dpi=300)

# Class
Dati_box_stool<-results_STOOL_w1_w4

Dati_stool_c<-Dati_box_stool[Dati_box_stool$i=="Class","ASV"] #3 Class
Dati_stool_c 

data.phy.stool <- tax_glom(w1_w4, taxrank = "Class", NArm = F)
data.prop.stool <- transform_sample_counts(data.phy.stool, function(x) x/sum(x)*100)


Dati_stool_c<-prune_taxa(Dati_stool_c, data.prop.stool)
Dati_stool_c

Dati_stool_c<-psmelt(Dati_stool_c)
Dati_stool_c


ggplot(Dati_stool_c,aes(x= Class, y=Abundance, fill= week)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Class Stool W1 vs W4", y="Relative Abundance", 
       fill='week', x="Class")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Class_Stool_W1_vs_W4.png", width = 15, height = 8, dpi=300)

# Order

Dati_stool_o<-Dati_box_stool[Dati_box_stool$i=="Order","ASV"] #6 Order
Dati_stool_o 

data.phy.stool <- tax_glom(w1_w4, taxrank = "Order", NArm = F)
data.prop.stool <- transform_sample_counts(data.phy.stool, function(x) x/sum(x)*100)


Dati_stool_o<-prune_taxa(Dati_stool_o, data.prop.stool)
Dati_stool_o

Dati_stool_o<-psmelt(Dati_stool_o)
Dati_stool_o

ggplot(Dati_stool_o,aes(x= Order, y=Abundance, fill= week)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 17) +
  labs(title= "Boxplot Order Stool W1 vs W4", y="Relative Abundance", 
       fill='week', x="Order")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Order_Stool_W1_vs_W4.png", width = 15, height = 8, dpi=300)

# Family

Dati_stool_f<-Dati_box_stool[Dati_box_stool$i=="Family","ASV"] #8 Family
Dati_stool_f 

data.phy.stool <- tax_glom(w1_w4, taxrank = "Family", NArm = F)
data.prop.stool <- transform_sample_counts(data.phy.stool, function(x) x/sum(x)*100)


Dati_stool_f<-prune_taxa(Dati_stool_f, data.prop.stool)
Dati_stool_f

Dati_stool_f<-psmelt(Dati_stool_f)
Dati_stool_f

ggplot(Dati_stool_f,aes(x= Family, y=Abundance, fill= week)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 16) +
  labs(title= "Boxplot Family Stool W1 vs W4", y="Relative Abundance", 
       fill='week', x="Family")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Family_Stool_W1_vs_W4.png", width = 15, height = 8, dpi=300)

# Genus

Dati_stool_g<-Dati_box_stool[Dati_box_stool$i=="Genus","ASV"] #14 Genus
Dati_stool_g 

data.phy.stool <- tax_glom(w1_w4, taxrank = "Genus", NArm = F)
data.prop.stool <- transform_sample_counts(data.phy.stool, function(x) x/sum(x)*100)


Dati_stool_g<-prune_taxa(Dati_stool_g, data.prop.stool)
Dati_stool_g

Dati_stool_g<-psmelt(Dati_stool_g)
Dati_stool_g

ggplot(Dati_stool_g,aes(x= Genus, y=Abundance, fill= week)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 10) +
  labs(title= "Boxplot Genus Stool W1 vs W4", y="Relative Abundance", 
       fill='week', x="Genus")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Genus_Stool_W1_vs_W4.png", width = 15, height = 8, dpi=300)

#Stool w1 1 Family
results_STOOL_w1$ASV<-row.names(results_STOOL_w1)
results_STOOL_w1
Dati_box_stool<-results_STOOL_w1
Dati_box_stool$ASV<-row.names(Dati_box_stool)


Dati_stool<-Dati_box_stool[Dati_box_stool$i=="Family","ASV"] #1 Family

Dati_stool 

data.order.stool <- tax_glom(stool_desq_w1, taxrank = "Family", NArm = F)
data.prop.stool <- transform_sample_counts(data.order.stool, function(x) x/sum(x)*100)


Dati_stool<-prune_taxa(Dati_stool, data.prop.stool)
Dati_stool

Dati_stool<-psmelt(Dati_stool)
Dati_stool


ggplot(Dati_stool,aes(x= Family, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Family Stool W1", y="Relative Abundance", 
       fill='Condition', x="Family")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Family_Stool_W1.png", width = 15, height = 8, dpi=300)


#####BOXPLOT COLON######
#Phylum
results_colon
Dati_box_colon<-results_colon
Dati_box_colon

Dati_colon_p<-Dati_box_colon[Dati_box_colon$i=="Phylum","ASV"] #2 Phylum

Dati_colon_p 

data.order.colon <- tax_glom(colon_desq, taxrank = "Phylum", NArm = F)
data.prop.colon <- transform_sample_counts(data.order.colon, function(x) x/sum(x)*100)


Dati_colon_p<-prune_taxa(Dati_colon_p, data.prop.colon)
Dati_colon_p

Dati_colon_p<-psmelt(Dati_colon_p)
Dati_colon_p

ggplot(Dati_colon_p,aes(x= Phylum, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Phylum Colon", y="Relative Abundance", 
       fill='Condition', x="Phylum")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Phylum_Colon.png", width = 15, height = 8, dpi=300)

#Order
results_colon
Dati_box_colon<-results_colon
Dati_box_colon

Dati_colon_o<-Dati_box_colon[Dati_box_colon$i=="Order","ASV"] #8 order

Dati_colon_o 

data.order.colon <- tax_glom(colon_desq, taxrank = "Order", NArm = F)
data.prop.colon <- transform_sample_counts(data.order.colon, function(x) x/sum(x)*100)

Dati_colon_o<-prune_taxa(Dati_colon_o, data.prop.colon)
Dati_colon_o

Dati_colon_o<-psmelt(Dati_colon_o)
Dati_colon_o

ggplot(Dati_colon_o,aes(x= Order, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 15) +
  labs(title= "Boxplot Order Colon", y="Relative Abundance", 
       fill='Condition', x="Order")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Order_Colon.png", width = 15, height = 8, dpi=300)

#Class
Dati_colon_c<-Dati_box_colon[Dati_box_colon$i=="Class","ASV"] #4 Class

Dati_colon_c 

data.order.colon <- tax_glom(colon_desq, taxrank = "Class", NArm = F)
data.prop.colon <- transform_sample_counts(data.order.colon, function(x) x/sum(x)*100)


Dati_colon_c<-prune_taxa(Dati_colon_c, data.prop.colon)
Dati_colon_c

Dati_colon_c<-psmelt(Dati_colon_c)
Dati_colon_c


ggplot(Dati_colon_c,aes(x= Class, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Class Colon", y="Relative Abundance", 
       fill='Condition', x="Class")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Class_Colon.png", width = 15, height = 8, dpi=300)

#Family
Dati_colon_f<-Dati_box_colon[Dati_box_colon$i=="Family","ASV"] #13 Family

Dati_colon_f 

data.order.colon <- tax_glom(colon_desq, taxrank = "Family", NArm = F)
data.prop.colon <- transform_sample_counts(data.order.colon, function(x) x/sum(x)*100)


Dati_colon_f<-prune_taxa(Dati_colon_f, data.prop.colon)
Dati_colon_f

Dati_colon_f<-psmelt(Dati_colon_f)
Dati_colon_f


ggplot(Dati_colon_f,aes(x= Family, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 12) +
  labs(title= "Boxplot Family Colon", y="Relative Abundance", 
       fill='Condition', x="Family")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Family_Colon.png", width = 15, height = 8, dpi=300)

#Genus
Dati_colon_g<-Dati_box_colon[Dati_box_colon$i=="Genus","ASV"] #10 Genus

Dati_colon_g 

data.order.colon <- tax_glom(colon_desq, taxrank = "Genus", NArm = F)
data.prop.colon <- transform_sample_counts(data.order.colon, function(x) x/sum(x)*100)


Dati_colon_g<-prune_taxa(Dati_colon_g, data.prop.colon)
Dati_colon_g

Dati_colon_g<-psmelt(Dati_colon_g)
Dati_colon_g


ggplot(Dati_colon_g,aes(x= Genus, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 17) +
  #geom_point(position = position_dodge( width = 0.8),size=3.5, alpha=0.3, aes(group=Condition)) +
  labs(title= "Boxplot Genus Colon", y="Relative Abundance", 
       fill='Condition', x="Genus")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Genus_Colon.png", width = 15, height = 8, dpi=300)

#####BOXPLOT LUNG######
#Order
results_lung
Dati_box_lung<-results_lung

Dati_lung_o<-Dati_box_lung[Dati_box_lung$i=="Order","ASV"] #1 Order

Dati_lung_o 

data.order.lung <- tax_glom(lung_desq, taxrank = "Order", NArm = F)
data.prop.lung <- transform_sample_counts(data.order.lung, function(x) x/sum(x)*100)


Dati_lung_o<-prune_taxa(Dati_lung_o, data.prop.lung)
Dati_lung_o

Dati_lung_o<-psmelt(Dati_lung_o)
Dati_lung_o


ggplot(Dati_lung_o,aes(x= Order, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Order Lung", y="Relative Abundance", 
       fill='Condition', x="Order")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Order_Lung.png", width = 15, height = 8, dpi=300)

#Family
Dati_lung_f<-Dati_box_lung[Dati_box_lung$i=="Family","ASV"] #3 Family

Dati_lung_f 

data.order.lung <- tax_glom(lung_desq, taxrank = "Family", NArm = F)
data.prop.lung <- transform_sample_counts(data.order.lung, function(x) x/sum(x)*100)


Dati_lung_f<-prune_taxa(Dati_lung_f, data.prop.lung)
Dati_lung_f

Dati_lung_f<-psmelt(Dati_lung_f)
Dati_lung_f


ggplot(Dati_lung_f,aes(x= Family, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Family Lung", y="Relative Abundance", 
       fill='Condition', x="Family")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Family_Lung.png", width = 15, height = 8, dpi=300)

#Genus
Dati_lung_g<-Dati_box_lung[Dati_box_lung$i=="Genus","ASV"] #4 genus

Dati_lung_g 

data.order.lung <- tax_glom(lung_desq, taxrank = "Genus", NArm = F)
data.prop.lung <- transform_sample_counts(data.order.lung, function(x) x/sum(x)*100)


Dati_lung_g<-prune_taxa(Dati_lung_g, data.prop.lung)
Dati_lung_g

Dati_lung_g<-psmelt(Dati_lung_g)
Dati_lung_g


ggplot(Dati_lung_g,aes(x= Genus, y=Abundance, fill= Condition)) + 
  geom_boxplot(width=0.8) + theme_bw(base_size = 25) +
  labs(title= "Boxplot Genus Lung", y="Relative Abundance", 
       fill='Condition', x="Genus")

ggsave(filename = "Results_Nanoplastiche/Deseq2/Deseq2_Genus_Lung.png", width = 15, height = 8, dpi=300)


############ TO CREATE AN UNIQUE PLOT OF ALL DESEQ2 RESULTS ############
### STOOL ###
tabella_g <- Dati_stool_g

tabella_g$i<-"Genera"
tabella_g[,c("Phylum","Order","Class","Family")]<-NULL
colnames(tabella_g)[colnames(tabella_g)=="Genus"]<-"Bacteria"

tabella_f <- Dati_stool_f
tabella_f$Taxa<-"Families"
tabella_f[,c("Phylum","Order","Class")]<-NULL
colnames(tabella_f)[colnames(tabella_f)=="Family"]<-"Bacteria"

tabella_o <- Dati_stool_o
tabella_o$Taxa<-"Orders"
tabella_o[,c("Phylum","Class")]<-NULL
colnames(tabella_o)[colnames(tabella_o)=="Order"]<-"Bacteria"

tabella_c <- Dati_stool_c
tabella_c$Taxa<-"Classes"
tabella_c[,"Phylum"]<-NULL
colnames(tabella_c)[colnames(tabella_c)=="Class"]<-"Bacteria"

tabella_p <- Dati_stool_p
tabella_p$Taxa<-"Phyla"
colnames(tabella_p)[colnames(tabella_p)=="Phylum"]<-"Bacteria"

tabella_tot<-rbind.data.frame(tabella_g,tabella_f,tabella_c,tabella_o,tabella_p)
tabella_tot$Taxa<-factor(tabella_tot$Taxa, levels = c("Phyla","Classes","Orders","Families","Genera"))

library(ggh4x) # allows to use facet_grid2 function
ggplot(tabella_tot, aes(x= Bacteria, y=Abundance, fill= week)) + facet_grid2(rows=vars(Taxa), independent = "x", scales = "free") +
  geom_boxplot(width=0.7) + theme_bw(base_size = 13) + theme(strip.text.y=element_text(size=15,colour="black")) +
  theme(legend.margin=margin(-25, 0, 0, 0), legend.position="bottom" ,axis.text.x = element_text(angle = -55, vjust=0.5, hjust=0, size=11), axis.text.y = element_text(size=12)) +
  scale_x_discrete(expand=c(-0.3, 2)) + theme(plot.title= element_text(size=18) ,legend.key.size=unit(0.7,"cm"), legend.text=element_text(size=14)) +
  labs(title= "Differently abundant Taxa in Stool samples", y="Abundance", fill="", x="") + scale_y_sqrt( )

ggsave(filename = "Results_Nanoplastiche/Differenze totali week stool1.png", width = 10, height = 13, dpi=300)
dev.off()

### COLON ###
tabella_g <- Dati_colon_g

tabella_g$Taxa<-"Genera"
tabella_g[,c("Phylum","Order","Class","Family")]<-NULL
colnames(tabella_g)[colnames(tabella_g)=="Genus"]<-"Bacteria"

tabella_f <- Dati_colon_f
tabella_f$Taxa<-"Families"
tabella_f[,c("Phylum","Order","Class")]<-NULL
colnames(tabella_f)[colnames(tabella_f)=="Family"]<-"Bacteria"

tabella_o <- Dati_colon_o
tabella_o$Taxa<-"Orders"
tabella_o[,c("Phylum","Class")]<-NULL
colnames(tabella_o)[colnames(tabella_o)=="Order"]<-"Bacteria"

tabella_c <- Dati_colon_c
tabella_c$Taxa<-"Classes"
tabella_c[,"Phylum"]<-NULL
colnames(tabella_c)[colnames(tabella_c)=="Class"]<-"Bacteria"


tabella_tot<-rbind.data.frame(tabella_g,tabella_f,tabella_c,tabella_o)
tabella_tot$Taxa<-factor(tabella_tot$Taxa, levels = c("Classes","Orders","Families","Genera"))

library(ggh4x) # allows to use facet_grid2 function
ggplot(tabella_tot, aes(x= Bacteria, y=Abundance, fill= Condition)) + facet_grid2(rows=vars(Taxa), independent = "x", scales = "free") +
  geom_boxplot(width=0.7) + theme_bw(base_size = 13) + theme(strip.text.y=element_text(size=15,colour="black")) +
  theme(legend.margin=margin(-25, 0, 0, 0), legend.position="bottom" ,axis.text.x = element_text(angle = -55, vjust=0.5, hjust=0, size=11), axis.text.y = element_text(size=12)) +
  scale_x_discrete(expand=c(-0.3, 2)) + theme(plot.title= element_text(size=18) ,legend.key.size=unit(0.7,"cm"), legend.text=element_text(size=14)) +
  labs(title= "Differently abundant Taxa in Colon samples", y="Abundance", fill="", x="") + scale_y_sqrt( )

ggsave(filename = "Results_Nanoplastiche/Differenze totali colon.png", width = 10, height = 13, dpi=300)
dev.off()


### LUNG ###

tabella_g <- Dati_lung_g

tabella_g$Taxa<-"Genera"
tabella_g[,c("Phylum","Order","Class","Family")]<-NULL
colnames(tabella_g)[colnames(tabella_g)=="Genus"]<-"Bacteria"


tabella_f <- Dati_lung_f
tabella_f<-subset.data.frame(tabella_f, Family==' Pseudomonadaceae')
tabella_f$Taxa<-"Families"
tabella_f[,c("Phylum","Order","Class")]<-NULL
colnames(tabella_f)[colnames(tabella_f)=="Family"]<-"Bacteria"

tabella_o <- Dati_lung_o
tabella_o$Taxa<-"Orders"
tabella_o[,c("Phylum","Class")]<-NULL
colnames(tabella_o)[colnames(tabella_o)=="Order"]<-"Bacteria"


tabella_tot<-rbind.data.frame(tabella_g,tabella_f,tabella_o)
tabella_tot$Taxa<-factor(tabella_tot$Taxa, levels = c("Phyla","Classes","Orders","Families","Genera"))

library(ggh4x) # allows to use facet_grid2 function
ggplot(tabella_tot, aes(x= Bacteria, y=Abundance, fill= Condition)) + facet_grid2(rows=vars(Taxa), independent = "x", scales = "free") +
  geom_boxplot(width=0.7) + theme_bw(base_size = 13) + theme(strip.text.y=element_text(size=15,colour="black")) +
  theme(legend.margin=margin(-25, 0, 0, 0), legend.position="bottom" ,axis.text.x = element_text(angle = -55, vjust=0.5, hjust=0, size=11), axis.text.y = element_text(size=12)) +
  scale_x_discrete(expand=c(-0.3, 2)) + theme(plot.title= element_text(size=18) ,legend.key.size=unit(0.7,"cm"), legend.text=element_text(size=14)) +
  labs(title= "Differently abundant Taxa in Lung samples", y="Abundance", fill="", x="") + scale_y_sqrt( )

ggsave(filename = "Results_Nanoplastiche/Differenze totali Lung.png", width = 10, height = 13, dpi=300)
dev.off()


########################## GRAFICI ORIZZONTALI ########################## 

# NB colori --> con alpha dici se lo vuoi più o meno scuro o trasparente
# end value serve per dargli la scala dell'asse y sennò da errore 
##### VEDOSS vs Healthy
results_colon
results_lung

tabella_tot_colon
ggplot(tabella_tot_colon, aes(x= Bacteria, y=Abundance, fill=Condition)) + 
  facet_grid(~factor(Taxa,levels = c("Classes","Orders","Families","Genera")), scales = "free_x", space="free") +
  scale_fill_manual(values=c("Untreated"="cyan","Treated"="red")) +
  scale_color_manual(values=c("Untreated"="cyan","Treated"="red")) +
  geom_boxplot(width=0.9, size= 0.4, alpha= 0.2, outlier.alpha = 0) +
  geom_point(position = position_jitterdodge(seed = 1994, dodge.width = 0.9, jitter.width = 0.4),
             aes(color=Condition), size= 0.8, alpha= 0.65) +  
  theme_classic2(base_size = 11) + 
  theme(strip.text.x=element_text(size=11.7,colour="black"),
        legend.margin=margin(-25, 0, 0, 0), legend.position="bottom" ,
        axis.text.x = element_text(angle = 22, vjust=1, hjust=1, size=10), 
        axis.text.y = element_text(size=8.8),
        plot.title= element_text(size=15) ,
        legend.key.size=unit(0.8,"cm"), 
        legend.text=element_text(size=14),
        panel.grid.major.y = element_line(size=0.12, color="gray")
  ) +
  guides( fill=guide_legend(nrow=1) ) +
  labs(title= "Differently abundant Taxa in Colon samples", y="Percentual Abundance", fill="Condition", x="") + 
  scale_x_discrete(expand=c(-0.2, 1)) + 
  scale_y_sqrt(breaks=c(0.1, 0.5 ,1, seq(2,20,2),seq(22,max(tabella_tot_colon$Abundance)+4,3)))
ggsave(filename = "DE_Colon_orizzontale.png", width = 7.5, height = 6, dpi=300)

# Calcola il valore massimo di Abundance e aggiungi 4
end_value <- max(tabella_tot_colon$Abundance) + 4

# Controlla se end_value è maggiore di 22
if (end_value > 22) {
  seq(22, end_value, 3)
} else {
  warning("Il valore finale è minore o uguale al valore iniziale. Sequenza non generata.")
}

tabella_tot_lung
ggplot(tabella_tot_lung, aes(x= Bacteria, y=Abundance, fill=Condition)) + 
  facet_grid(~factor(Taxa,levels = c("Orders","Families","Genera")), scales = "free_x", space="free") +
  scale_fill_manual(values=c("Untreated"="cyan","Treated"="red")) +
  scale_color_manual(values=c("Untreated"="cyan","Treated"="red")) +
  geom_boxplot(width=0.9, size= 0.4, alpha= 0.2, outlier.alpha = 0) +
  geom_point(position = position_jitterdodge(seed = 1994, dodge.width = 0.9, jitter.width = 0.4),
             aes(color=Condition), size= 0.8, alpha= 0.65) +  
  theme_classic2(base_size = 11) + 
  theme(strip.text.x=element_text(size=11.7,colour="black"),
        legend.margin=margin(-25, 0, 0, 0), legend.position="bottom" ,
        axis.text.x = element_text(angle = 22, vjust=1, hjust=1, size=10), 
        axis.text.y = element_text(size=8.8),
        plot.title= element_text(size=15) ,
        legend.key.size=unit(0.8,"cm"), 
        legend.text=element_text(size=14),
        panel.grid.major.y = element_line(size=0.12, color="gray")
  ) +
  guides( fill=guide_legend(nrow=1) ) +
  labs(title= "Differently abundant Taxa in Lung samples", y="Percentual Abundance", fill="Condition", x="") + 
  scale_x_discrete(expand=c(-0.2, 1)) + 
  scale_y_sqrt(breaks=c(0.1, 0.5 ,1, seq(2,20,2),seq(5,max(tabella_tot_lung$Abundance)+4,3)))
ggsave(filename = "DE_Lung_orizzontale.png", width = 7.5, height = 6, dpi=300)





####################### FFAs ################

##objects
genus_FFAs <- tax_glom(data, taxrank = "Genus", NArm = F) #glom on genus
genus_FFAs <- transform_sample_counts(genus_FFAs, function(x) (x/sum(x)) *100) #RA on genus

FFAs_table<-read.csv(file = 'FFAs_metadata.csv', sep = ';', row.names = 1)
FFAs_table
row.names(FFAs_table)
FFAs_table <- as.data.frame(t(FFAs_table))

################## TOP 5 GENUS ###################
###### case w4 ######
#tot_top_genus_stool<- c(top5_genus_w4_stool, top5_genus_w1_stool, top5_genus_control_stool_w4, top5_genus_control_stool_w1)
FFAs_data <- prune_taxa (top5_genus_w4_stool, genus_FFAs) 
head(sample_data(FFAs_data))
FFAs_data <- subset_samples (FFAs_data, Sample == 'Stool' & week == 'w4' & Condition == 'Case')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID

#FFAs table - Stool
colnames(FFAs_table) <- gsub ("DM105", " DM105", colnames(FFAs_table))
colnames(FFAs_table) <- gsub ("DM106", " DM106", colnames(FFAs_table))
colnames(FFAs_table) <- gsub ("DM104", " DM104", colnames(FFAs_table))
colnames(FFAs_table) <- gsub ("DM95", " DM95", colnames(FFAs_table))
FFAs_4 <- FFAs_table [, vector4]

vec <- row.names(FFAs_table) #to clean df of results
### vs top5 genera
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
Names[2]<-'NA_Lachnospiraceae'
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)
otu_samples

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View (otu_df)
View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
View(tot)
#tot[,1:19] <- as.numeric (tot [,1:19])

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)
colnames(results)

## clear file top5
#df <- results[results$Variabile_1 != results$Variabile_2, ] #to remove rows identical each other
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]
df$P_adj<-p.adjust(df$P_value, method = "BH")

df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""


View(df)
write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_casew4.xlsx")

##### Control W4 ######
#tot_top_genus_stool<- c(top5_genus_w4_stool, top5_genus_w1_stool, top5_genus_control_stool_w1, top5_genus_control_stool_w4 )
FFAs_data <- prune_taxa (top5_genus_control_stool_w4, genus_FFAs) 
sample_data(FFAs_data)
FFAs_data <- subset_samples(FFAs_data, Sample == 'Stool' & week == 'w4' & Condition == 'Control')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID

#FFAs table - Stool
FFAs_4 <- FFAs_table [, vector4]

### vs top5 genera
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
Names[2]<-'NA_Lachnospiraceae'
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)
otu_samples

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View (otu_df)
#View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
#View(tot)
#tot[,1:19] <- as.numeric (tot [,1:19])

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

#df <- results[results$Variabile_1 != results$Variabile_2, ] #to remove rows identical each other
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_controlw4.xlsx")

##### CASE W1 ######
#tot_top_genus_stool<- c(top5_genus_w4_stool, top5_genus_w1_stool, top5_genus_control_stool_w1, top5_genus_control_stool_w4 )
FFAs_data <- prune_taxa (top5_genus_w1_stool, genus_FFAs) 
sample_data(FFAs_data)
FFAs_data <- subset_samples(FFAs_data, Sample == 'Stool' & week == 'w1' & Condition == 'Case')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID

#FFAs table - Stool
FFAs_4 <- FFAs_table [, vector4]

### vs top5 genera
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View (otu_df)
#View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
#View(tot)
#tot[,1:19] <- as.numeric (tot [,1:19])

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

#df <- results[results$Variabile_1 != results$Variabile_2, ] #to remove rows identical each other
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_casew1.xlsx")

##### Control W1 ######
#tot_top_genus_stool<- c(top5_genus_w4_stool, top5_genus_w1_stool, top5_genus_control_stool_w1, top5_genus_control_stool_w4 )
FFAs_data <- prune_taxa (top5_genus_control_stool_w1, genus_FFAs) 
sample_data(FFAs_data)
FFAs_data <- subset_samples(FFAs_data, Sample == 'Stool' & week == 'w1' & Condition == 'Control')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID

#FFAs table - Stool
FFAs_4 <- FFAs_table [, vector4]

### vs top5 genera
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names


# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)
otu_samples

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View corr_top5
#View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
#View(tot)
#tot[,1:19] <- as.numeric (tot [,1:19])

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

#df <- results[results$Variabile_1 != results$Variabile_2, ] #to remove rows identical each other
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_controlw1.xlsx")

################## DESEQ2 ######################

## vs deseq2 results stool w1
vector3<-results_STOOL_w1$ASV

genus_FFAs_deseq <- tax_glom(data, taxrank = "Family", NArm = F) #glom on family
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100) #RA on family

FFAs_data_deseq <- prune_taxa (vector3, genus_FFAs_deseq) 
sample_data(FFAs_data_deseq)
FFAs_data_deseq <- subset_samples(FFAs_data_deseq, Sample == 'Stool' & week == 'w1')
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Family
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
#colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_Family.xlsx")

#w1 vs w4 Phylum
vector5 <- results_STOOL_w1_w4$ASV

genus_FFAs_deseq <- tax_glom(w1_w4, taxrank = "Phylum", NArm = F)
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100) #RA on genus

FFAs_data_deseq <- prune_taxa (vector5, genus_FFAs_deseq) 
sample_data(FFAs_data_deseq)
FFAs_data_deseq <- subset_samples(FFAs_data_deseq, Sample == 'Stool' & Condition == 'Case')
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Phylum
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names

which(is.na(FFAs_table))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
length(otu_df)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_w4_Phylum.xlsx")

#w1 vs w4 Class
vector5 <- results_STOOL_w1_w4$ASV

genus_FFAs_deseq <- tax_glom(w1_w4, taxrank = "Class", NArm = F)
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100)

FFAs_data_deseq <- prune_taxa (vector5, genus_FFAs_deseq) 
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Class
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
colnames(otu_table(FFAs_data_deseq))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
length(otu_df)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_w4_Class.xlsx")

#w1 vs w4 Order
vector5 <- results_STOOL_w1_w4$ASV

genus_FFAs_deseq <- tax_glom(w1_w4, taxrank = "Order", NArm = F)
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100) #RA on genus

FFAs_data_deseq <- prune_taxa (vector5, genus_FFAs_deseq) 
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Order
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names

which(is.na(FFAs_table))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
length(otu_df)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_w4_Order.xlsx")

#w1 vs w4 Family
vector5 <- unique(results_STOOL_w1_w4$ASV)

genus_FFAs_deseq <- tax_glom(w1_w4, taxrank = "Family", NArm = F)
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100) #RA on genus

FFAs_data_deseq <- prune_taxa (vector5, genus_FFAs_deseq) 
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Family
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names

which(is.na(FFAs_table))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
length(otu_df)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_w4_Family.xlsx")

#w1 vs w4 Genus
vector5 <- results_STOOL_w1_w4$ASV

genus_FFAs_deseq <- tax_glom(w1_w4, taxrank = "Genus", NArm = F)
genus_FFAs_deseq <- transform_sample_counts(genus_FFAs_deseq, function(x) (x/sum(x)) *100) #RA on genus

FFAs_data_deseq <- prune_taxa (vector5, genus_FFAs_deseq) 
sample_data(FFAs_data_deseq)
FFAs_data_deseq <- subset_samples(FFAs_data_deseq, Sample == 'Stool' & Condition == 'Case')
otu_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Genus
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names

which(is.na(FFAs_table))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table) <- gsub (" ", "", colnames(FFAs_table) )

# Match the FFA table to the OTU samples
FFAs_table <- FFAs_table[,otu_samples]
length(FFAs_table)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
length(otu_df)
#View (otu_df)
View(FFAs_table)

prova<- (t(otu_df))
prova1<-(t(FFAs_table))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_w1_w4_Genus.xlsx")


#### COLON ####
##objects
genus_FFAs <- tax_glom(data, taxrank = "Genus", NArm = F) #glom on genus
genus_FFAs <- transform_sample_counts(genus_FFAs, function(x) (x/sum(x)) *100) #RA on genus

FFAs_table_colon<-read.csv(file = 'FFAs_colon.csv', sep = ';', row.names = 1)
FFAs_table_colon
row.names(FFAs_table_colon)
FFAs_table_colon <- as.data.frame(t(FFAs_table_colon))
#TOP5 GENUS
#top5_genus_colon_case
FFAs_data <- prune_taxa (top5_genus_colon_case, genus_FFAs) 
head(sample_data(FFAs_data))
FFAs_data <- subset_samples (FFAs_data, Sample == 'Colon' & Condition == 'Case')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID
colnames(FFAs_table_colon) <- gsub ("  DM113", " DM113", colnames(FFAs_table_colon))
colnames(FFAs_table_colon) <- gsub ("  DM114", " DM114", colnames(FFAs_table_colon))
colnames(FFAs_table_colon) <- gsub ("  DM115", " DM115", colnames(FFAs_table_colon))
colnames(FFAs_table_colon) <- gsub ("DM116", " DM116", colnames(FFAs_table_colon))
colnames(FFAs_table_colon) <- gsub ("DM117", " DM117", colnames(FFAs_table_colon))
colnames(FFAs_table_colon) <- gsub ("DM118", " DM118", colnames(FFAs_table_colon))

#FFAs table - Stool
FFAs_4 <- FFAs_table_colon [, vector4]

vec <- row.names(FFAs_table_colon) #to clean df of results
### vs top5 genera case
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
Names[2]<-'NA_Lachnospiraceae'
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names

which(is.na(FFAs_4))
which(is.na(otu_table(FFAs_data)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)
otu_samples

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View (otu_df)
View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)
colnames(results)

## clear file top5
#df <- results[results$Variabile_1 != results$Variabile_2, ] #to remove rows identical each other
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_case_Colon.xlsx") #no significance

#TOP5 GENUS
#top5_genus_colon_control
FFAs_data <- prune_taxa (top5_genus_colon_control, genus_FFAs) 
head(sample_data(FFAs_data))
FFAs_data <- subset_samples (FFAs_data, Sample == 'Colon' & Condition == 'Control')
otu_table(FFAs_data)
sample_data(FFAs_data)
vector4 <- sample_data(FFAs_data)$Sample_ID
colnames(FFAs_table_colon) <- gsub ("DM107", " DM107", colnames(FFAs_table_colon))

#FFAs table - Stool
FFAs_4 <- FFAs_table_colon [, vector4]

vec <- row.names(FFAs_table_colon) #to clean df of results
### vs top5 genera case
Names<-as.data.frame(tax_table(FFAs_data))
Names<-Names$Genus
Names[2]<-'NA_Lachnospiraceae'
corr_top5 <- as.data.frame(otu_table(FFAs_data))
row.names(corr_top5)<-Names

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_top5)
otu_samples

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_top5)
#View (otu_df)
View(FFAs_4)

otu_ffas<- (t(otu_df))
fas_tab<-(t(FFAs_4))
tot<-cbind(otu_ffas,fas_tab)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)
colnames(results)

## clear file top5
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx (df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_topGenus_control_Colon.xlsx")


### DESEQ2 COLON
### DESEQ2 COLON
#colon_desq oggetto subset colon

vector3<-results_colon[results_colon$i=='Phylum',"ASV"] #2 phyla

gen_FFAs_deseq <- tax_glom(colon_desq, taxrank = "Phylum", NArm = F) #prima il subset (colon_desq)
tax_table(gen_FFAs_deseq)

gen_FFAs_deseq <- transform_sample_counts(gen_FFAs_deseq, function(x) (x/sum(x)) *100)
otu_table(gen_FFAs_deseq)

FFAs_data_deseq <- prune_taxa (vector3, gen_FFAs_deseq) 
tax_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

otu_table(FFAs_data_deseq)


Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Phylum
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table_colon))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table_colon) <- gsub (" ", "", colnames(FFAs_table_colon) )

# Match the FFA table to the OTU samples
FFAs_table_colon <- FFAs_table_colon[,otu_samples]
length(FFAs_table_colon)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table_colon)

prova<- (t(otu_df))
prova1<-(t(FFAs_table_colon))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_colon_Phylum.xlsx")

### DESEQ2 COLON
#colon_desq oggetto subset colon

vector3<-results_colon[results_colon$i=='Class',"ASV"] #4 class

gen_FFAs_deseq <- tax_glom(colon_desq, taxrank = "Class", NArm = F) #prima il subset (colon_desq)
tax_table(gen_FFAs_deseq)

gen_FFAs_deseq <- transform_sample_counts(gen_FFAs_deseq, function(x) (x/sum(x)) *100)
otu_table(gen_FFAs_deseq)

FFAs_data_deseq <- prune_taxa (vector3, gen_FFAs_deseq) 
tax_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

otu_table(FFAs_data_deseq)


Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Class
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table_colon))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table_colon) <- gsub (" ", "", colnames(FFAs_table_colon) )

# Match the FFA table to the OTU samples
FFAs_table_colon <- FFAs_table_colon[,otu_samples]
length(FFAs_table_colon)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table_colon)

prova<- (t(otu_df))
prova1<-(t(FFAs_table_colon))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_colon_Class.xlsx")

###
vector3<-results_colon[results_colon$i=='Order',"ASV"] #8 order

gen_FFAs_deseq <- tax_glom(colon_desq, taxrank = "Order", NArm = F) #prima il subset
tax_table(gen_FFAs_deseq)

gen_FFAs_deseq <- transform_sample_counts(gen_FFAs_deseq, function(x) (x/sum(x)) *100)
otu_table(gen_FFAs_deseq)

FFAs_data_deseq <- prune_taxa (vector3, gen_FFAs_deseq) 
tax_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

otu_table(FFAs_data_deseq)


Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Order
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table_colon))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table_colon) <- gsub (" ", "", colnames(FFAs_table_colon) )

# Match the FFA table to the OTU samples
FFAs_table_colon <- FFAs_table_colon[,otu_samples]
length(FFAs_table_colon)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table_colon)

prova<- (t(otu_df))
prova1<-(t(FFAs_table_colon))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_colon_Order.xlsx")

###
vector3<-results_colon[results_colon$i=='Family',"ASV"] #Family

gen_FFAs_deseq <- tax_glom(colon_desq, taxrank = "Family", NArm = F) #prima il subset (colon_desq)
tax_table(gen_FFAs_deseq)

gen_FFAs_deseq <- transform_sample_counts(gen_FFAs_deseq, function(x) (x/sum(x)) *100)
otu_table(gen_FFAs_deseq)

FFAs_data_deseq <- prune_taxa (vector3, gen_FFAs_deseq) 
tax_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)

otu_table(FFAs_data_deseq)


Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Family
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table_colon))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table_colon) <- gsub (" ", "", colnames(FFAs_table_colon) )

# Match the FFA table to the OTU samples
FFAs_table_colon <- FFAs_table_colon[,otu_samples]
length(FFAs_table_colon)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table_colon)

prova<- (t(otu_df))
prova1<-(t(FFAs_table_colon))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_colon_Family.xlsx")

###
vector3<-results_colon[results_colon$i=='Genus',"ASV"] #10 Genus

gen_FFAs_deseq <- tax_glom(colon_desq, taxrank = "Genus", NArm = F) #prima il subset (colon_desq)
tax_table(gen_FFAs_deseq)

gen_FFAs_deseq <- transform_sample_counts(gen_FFAs_deseq, function(x) (x/sum(x)) *100)
otu_table(gen_FFAs_deseq)

FFAs_data_deseq <- prune_taxa (vector3, gen_FFAs_deseq) 
tax_table(FFAs_data_deseq)
sample_data(FFAs_data_deseq)
otu_table(FFAs_data_deseq)

Names<-as.data.frame(tax_table(FFAs_data_deseq))
Names<-Names$Genus
corr_deseq2 <- as.data.frame(otu_table(FFAs_data_deseq))
row.names(corr_deseq2)<-Names
#colnames(otu_table(FFAs_data_deseq))

which(is.na(FFAs_table_colon))
which(is.na(otu_table(FFAs_data_deseq)))

# Extract the sample names from the OTU table
otu_samples <- colnames(corr_deseq2)
otu_samples
colnames(FFAs_table_colon) <- gsub (" ", "", colnames(FFAs_table_colon) )

# Match the FFA table to the OTU samples
FFAs_table_colon <- FFAs_table_colon[,otu_samples]
length(FFAs_table_colon)

# Convert the OTU Phyloseq object to a data frame
otu_df <- as.data.frame(corr_deseq2)
#View (otu_df)
View(FFAs_table_colon)

prova<- (t(otu_df))
prova1<-(t(FFAs_table_colon))
tot<-cbind(prova,prova1)
View(tot)

results <- data.frame(matrix(ncol=4, nrow=0))
colnames(results)<-c("Variabile_1","Variabile_2","Correlazione","P_value")
colnames(tot)

for (i in 1:(ncol(tot))) {
  for (j in i:ncol(tot)) {
    cor.test_result <- cor.test(tot[,i], tot[,j], method="spearman", use = complete.obs)
    results[nrow(results)+1,] <- c(colnames(tot)[i], colnames(tot)[j], cor.test_result$estimate, cor.test_result$p.value)
  }
}

View(results)

## clear file deseq
df <- results [results$Variabile_1 %in% Names,]
df <- df [df$Variabile_2 %in% vec ,]

df$P_adj<-p.adjust(df$P_value, method = "BH")
df$Sign<-df$P_adj
df$Sign[df$Sign < 0.05]<-"*"
df$Sign[df$Sign > 0.05]<-""
df$Sign[is.na(df$Sign)]<-""

write_xlsx(df, "Results_Nanoplastiche/FFAs_correlations/Correlazioni_FFAs_Deseq_colon_Genus.xlsx")



################### post analisi #####################
# w1 vs w4 control
###### alpha div ######
a_stool_w1w4_cnt <- subset_samples(a_stool, Condition=='Control')
sample_data(a_stool_w1w4_cnt)
# order w1 w4 in order to do a paired test bc is the same mice
nuovi_nomi_campioni_2 <- c("DM83", "DM84", "DM85", "DM86", "DM87", "DM88", "DM95", "DM96", "DM97", "DM98", "DM99", "DM100")

#sample_table
metadata_case_2 <- as.data.frame(sample_data(a_stool_w1w4_cnt))
head(metadata_case_2)

metadata_case_2 <- metadata_case_2 [nuovi_nomi_campioni_2,]
metadata_case_2 #ordinati

#otu_table
otu_case <- as.data.frame(otu_table(a_stool_w1w4_cnt))
otu_case

otu_case <- otu_case [, nuovi_nomi_campioni_2]
head(otu_case)

#tax_table
tax_case <- as.data.frame(tax_table(a_stool_w1w4_cnt))

#nuovo phy obj
new_alpha<- phyloseq(otu_table(as.matrix(otu_case), taxa_are_rows = TRUE), tax_table(as.matrix(tax_case)), sample_data(metadata_case_2))
sample_data(new_alpha)

sample_data(a_stool_w1w4_cnt)
pAlpha<-plot_richness(a_stool_w1w4_cnt, measures=c("Shannon", "Observed"), x="week")
pAlpha

class(colnames(sample_data(a_stool_w1w4_cnt)))

#eveness
H <- pAlpha$data[pAlpha$data$variable=="Shannon", ]
obs <- pAlpha$data[pAlpha$data$variable=="Observed", ]

identical(H$Sample_ID, obs$Sample_ID) # TRUE
ev<-H
ev$value<-(H$value)/log((obs$value))
ev$variable<-rep("Evenness")
head(ev) #evenness table

New_data<-rbind.data.frame(obs,H,ev)
pAlpha$data<-New_data


pAlpha  + geom_boxplot(data=pAlpha$data, aes(color= NULL), alpha=0.1) +
  labs(x="week", title=paste ("Alpha diversity plot Stool W1 W4 cntrs")) +  guides(fill="none", color="none") + 
  theme(axis.text.x= element_text(angle=90, vjust=1, hjust=1, size=11)) +
  stat_compare_means(aes(group = week), method = "wilcox.test", paired=TRUE, label="p.format",label.x= 1.5, size=3.5, label.y.npc = "top", vjust=-0.5, hjust=0.45)
ggsave(file=paste0("Results_Nanoplastiche/Alpha_Div/Alpha diversity plot Stool W1 W4 cntrs.png"), width = 6,height =6, dpi=300)  #Mann Withney test

rm (H,ev,pAlpha)

############ beta div ##############
b.stool.w1_w4_cnt <- subset_samples(b.stool, Condition == 0)
data.sqrt_prop<-transform_sample_counts(b.stool.w1_w4_cnt, sqrt)
DistBC <- phyloseq::distance(data.sqrt_prop, method = "euclidean") 
ordBC <- ordinate(data.sqrt_prop, method = "PCoA", distance = DistBC)


PERM<-adonis2(DistBC ~ sample_data(b.stool.w1_w4_cnt)[['week']], data=as(sample_data(data.sqrt_prop),"data.frame"), permutations = 9999)
DISP<-permutest(betadisper(DistBC, sample_data(data.sqrt_prop)[['week']]))
temp<-cbind(PERM$`Pr(>F)`[1],DISP$tab$`Pr(>F)`[1])

plot_ordination(data.sqrt_prop, ordBC, color = 'week', shape = 'week') +
  geom_point(size=3) + theme_bw() + stat_ellipse()+
  geom_text(aes(label= sample_names(data.sqrt_prop)), col="black") +
  labs(title=paste("PCoA on genera with Hellinger distance \n(euclidean of sqrt of proportions) of Stool W1 vs W4 cnt"), subtitle = paste0("Pr(>F): ",PERM$`Pr(>F)`[1]),color= 'week')

ggsave(file=paste("Results_Nanoplastiche/Beta_Div/PCoA Hellinger Beta diversity Stool W1 vs W4 cnt.png", sep=""),  width = 8, height = 6, dpi=300)

rm(data.sqrt_prop,DistBC,ordBC)

##### Package version ####

package<-sessionInfo()

con <- file("Results_Nanoplastiche/R_version_and_packages.txt")
sink(con, append = TRUE)

at(package$R.version$version.string)
cat("   running on", package$running)
cat("\n", "\n", fill=TRUE)
package$otherPkgs$DESeq2[c(1,4)]
cat("\n", "\n", fill=TRUE)
package$otherPkgs$phyloseq[1:2]
cat("\n", "\n", fill=TRUE)
package$otherPkgs$ggplot2[1:2]
cat("\n", "\n", fill=TRUE)
package$otherPkgs$vegan[c(1,3)]
cat("\n", "\n", fill=TRUE)
package$otherPkgs$mixOmics[c(1,4)]
cat("\n \n \nEvery package: \n", fill=TRUE)
print(package$otherPkgs)

sink()
close(con)
suppressWarnings(rm(con))







